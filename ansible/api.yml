- hosts: api
  tasks:

  - name: Run redis container
    docker_container:
      name: 'miniweather_redis'
      image: redis:5.0.6
      state: 'started'
      exposed_ports:
      - "6379"
      volumes:
      - /opt/data/miniweather/redis:/data

  - name: Run database container
    docker_container:
      name: 'miniweather_db'
      image: mdillon/postgis:latest
      state: 'started'
      exposed_ports:
      - "5432"
      volumes:
      - /opt/data/miniweather/db:/var/lib/postgresql/data/
      env:
        POSTGRESQL_USER: 'postgres'
        POSTGRESQL_DATABASE: 'postgres'
    register: db_cont_metadata

  - name: Run Api
    docker_container:
      name: 'miniweather_api'
      image: thesinner/miniweather_backend:{{ lookup('env', 'CI_COMMIT_TAG') }}
      state: 'started'
      pull: yes
      command: '/code/run_api.sh release'
      restart: yes
      links:
      - "miniweather_redis:redis"
      - "miniweather_db:db"
      volumes:
      - /opt/data/miniweather/media:/code/miniweather/media
      - /opt/data/miniweather/api:/storage
      - /opt/data/miniweather/ip_data:/code/miniweather/data
      - /opt/data/miniweather/geo_data:/code/miniweather/geo/data
      ports:
      - "8080:8100"
      env:
        PYTHONPATH: '/code/miniweather'
        BASE_URL: 'https://meather.ir'
        MEDIA_URL: 'https://meather.ir/media/'
        DEBUG_VALUE: 'FALSE'
        MDB_NAME: 'postgres'
        SECRET_KEY:  "{{lookup('env', 'SECRET_KEY')}}"
        WEATHER_API_TOKEN:  "{{lookup('env', 'WEATHER_API_TOKEN')}}"
    ignore_errors: no

  - name: Run Web
    docker_container:
      name: 'miniweather_web'
      image: thesinner/miniweather_web:{{ lookup('env', 'CI_COMMIT_TAG') }}
      state: 'started'
      command: ''
      restart: yes
      ports:
      - "8081:80"
    ignore_errors: no

  - name: "Check if Api is running"
    docker_container:
      name: "api"
      image: thesinner/miniweather_backend:{{ lookup('env', 'CI_COMMIT_TAG') }}
      state: present
    register: container_test_started
    ignore_errors: no

  - name: "Check if Api is responsing"
    uri:
      url: "https://meather.ir/api/admin"
      method: GET
      validate_certs: no
      status_code: [200]
    register: result
    until: result.status == 200
    retries: 10
    delay: 10