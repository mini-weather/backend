- hosts: api
  tasks:
  - name: Set redis ip
    lineinfile:
      path: /etc/hosts
      line: "{{ lookup('env', 'REDIS_IP') }} redis"

  - name: Set db ip
    lineinfile:
      path: /etc/hosts
      line: "{{ lookup('env', 'DB_IP') }} db"

  - name: Login to Docker Registry
    command: docker login -u {{ lookup('env', 'DOCKER_USERNAME') }} -p {{ lookup('env', 'DOCKER_PASSWORD') }}

  - name: Run redis container
    docker_container:
      name: 'redis'
      image: redis:5.0.6
      state: 'started'
      network_mode: host
      volumes:
      - /opt/data/redis:/data

  - name: Run database container
    docker_container:
      name: 'db'
      image: mdillon/postgis:latest
      state: 'started'
      network_mode: host
      volumes:
      - /opt/data/db:/var/lib/postgresql/data/
      env:
        POSTGRESQL_USER: 'postgres'
        POSTGRESQL_DATABASE: 'postgres'
    register: db_cont_metadata

  - name: Run Api
    docker_container:
      name: 'api'
      image: thesinner/miniweather_backend:{{ lookup('env', 'CI_COMMIT_TAG') }}
      state: 'started'
      command: '/code/miniweather/run_api.sh release'
      network_mode: host
      volumes:
      - /opt/data/media:/code/miniweather/media
      - /opt/data/api:/storage
      env:
        PYTHONPATH: '/code/miniweather'
        BASE_URL: 'https://meather.ir'
        MEDIA_URL: 'https://meather.ir/media/'
        DEBUG_VALUE: 'FALSE'
        DB_NAME: 'postgres'
    ignore_errors: no

  - name: "Check if Api is running"
    docker_container:
      name: "api"
      image: thesinner/miniweather_backend:{{ lookup('env', 'CI_COMMIT_TAG') }}
      state: present
    register: container_test_started
    ignore_errors: no

  - name: "Check if Api is responsing"
    uri:
      url: "https://meather.ir/api/admin"
      method: GET
      validate_certs: no
      status_code: [200]
    register: result
    until: result.status == 200
    retries: 10
    delay: 10